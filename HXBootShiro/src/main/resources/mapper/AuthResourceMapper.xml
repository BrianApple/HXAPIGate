<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.usthe.bootshiro.dao.AuthResourceMapper">
    <resultMap id="BaseResultMap" type="com.usthe.bootshiro.domain.bo.AuthResource">
        <id column="ID" jdbcType="INTEGER" property="id"/>
        <result column="CODE" jdbcType="VARCHAR" property="code"/>
        <result column="NAME" jdbcType="VARCHAR" property="name"/>
        <result column="PARENT_ID" jdbcType="INTEGER" property="parentId"/>
        <result column="URI" jdbcType="VARCHAR" property="uri"/>
        <result column="VERSION" jdbcType="VARCHAR" property="version"/>
        <result column="TYPE" jdbcType="SMALLINT" property="type"/>
        <result column="METHOD" jdbcType="VARCHAR" property="method"/>
        <result column="NEED_AUTH" jdbcType="VARCHAR" property="needAuth"/>
        <result column="ROUTE_INFO" jdbcType="VARCHAR" property="routeInfo"/>
        <result column="ICON" jdbcType="VARCHAR" property="icon"/>
        <result column="STATUS" jdbcType="SMALLINT" property="status"/>
        <result column="CREATE_TIME" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="UPDATE_TIME" jdbcType="TIMESTAMP" property="updateTime"/>
    </resultMap>
    <sql id="Base_Column_List">
    ID, CODE, NAME, PARENT_ID, URI, VERSION, TYPE, METHOD,NEED_AUTH,ROUTE_INFO, ICON, STATUS, CREATE_TIME, UPDATE_TIME
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from auth_resource
        where ID = #{id,jdbcType=INTEGER}
    </select>
    <!--删除资源-->
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from auth_resource
    where ID = #{id,jdbcType=INTEGER}
  </delete>
    <insert id="insert" keyColumn="ID" keyProperty="id" parameterType="com.usthe.bootshiro.domain.bo.AuthResource"
            useGeneratedKeys="true">
    insert into auth_resource (CODE, NAME, PARENT_ID, 
      URI,VERSION, TYPE, METHOD, NEED_AUTH,ROUTE_INFO,
      ICON, STATUS, CREATE_TIME, 
      UPDATE_TIME)
    values (#{code,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{parentId,jdbcType=INTEGER}, 
      #{uri,jdbcType=VARCHAR},#{version,jdbcType=VARCHAR}, #{type,jdbcType=SMALLINT}, #{method,jdbcType=VARCHAR},  #{needAuth,jdbcType=TINYINT},  #{routeInfo,jdbcType=LONGVARCHAR},
      #{icon,jdbcType=VARCHAR}, #{status,jdbcType=SMALLINT}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP})
  </insert>
    <insert id="insertSelective" keyColumn="ID" keyProperty="id"
            parameterType="com.usthe.bootshiro.domain.bo.AuthResource" useGeneratedKeys="true">
        insert into auth_resource
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="code != null">
                CODE,
            </if>
            <if test="name != null">
                NAME,
            </if>
            <if test="parentId != null">
                PARENT_ID,
            </if>
            <if test="uri != null">
                URI,
            </if>
            <if test="version != null">
                VERSION,
            </if>
            <if test="type != null">
                TYPE,
            </if>
            <if test="method != null">
                METHOD,
            </if>
            <if test="needAuth != null">
                NEED_AUTH,
            </if>
            <if test="routeInfo != null">
                ROUTE_INFO,
            </if>
            <if test="icon != null">
                ICON,
            </if>
            <if test="status != null">
                STATUS,
            </if>
                CREATE_TIME,
            <if test="updateTime != null">
                UPDATE_TIME,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="code != null">
                #{code,jdbcType=VARCHAR},
            </if>
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="parentId != null">
                #{parentId,jdbcType=INTEGER},
            </if>
            <if test="uri != null">
                #{uri,jdbcType=VARCHAR},
            </if>
            <if test="version != null">
                #{version,jdbcType=VARCHAR},
            </if>
            <if test="type != null">
                #{type,jdbcType=SMALLINT},
            </if>
            <if test="method != null">
                #{method,jdbcType=VARCHAR},
            </if>
            <if test="needAuth != null">
                #{needAuth,jdbcType=TINYINT},   
            </if>
            <if test="routeInfo != null">
                #{routeInfo,jdbcType=LONGVARCHAR},
            </if>
            <if test="icon != null">
                #{icon,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                #{status,jdbcType=SMALLINT},
            </if>
             NOW(),
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.usthe.bootshiro.domain.bo.AuthResource">
        update auth_resource
        <set>
            <if test="code != null">
                CODE = #{code,jdbcType=VARCHAR},
            </if>
            <if test="name != null">
                NAME = #{name,jdbcType=VARCHAR},
            </if>
            <if test="parentId != null">
                PARENT_ID = #{parentId,jdbcType=INTEGER},
            </if>
            <if test="uri != null">
                URI = #{uri,jdbcType=VARCHAR},
            </if>
            <if test="version != null">
                VERSION = #{version,jdbcType=VARCHAR},
            </if>
            <if test="type != null">
                TYPE = #{type,jdbcType=SMALLINT},
            </if>
            <if test="method != null">
                METHOD = #{method,jdbcType=VARCHAR},
            </if>
            <if test="needAuth != null">
                NEED_AUTH = #{needAuth,jdbcType=TINYINT},   
            </if>
            <if test="routeInfo != null">
               ROUTE_INFO =  #{routeInfo,jdbcType=LONGVARCHAR},
            </if>
            <if test="icon != null">
                ICON = #{icon,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                STATUS = #{status,jdbcType=SMALLINT},
            </if>
            <if test="createTime != null">
                CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
            </if>
             UPDATE_TIME = NOW(),
        </set>
        where ID = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.usthe.bootshiro.domain.bo.AuthResource">
    update auth_resource
    set CODE = #{code,jdbcType=VARCHAR},
      NAME = #{name,jdbcType=VARCHAR},
      PARENT_ID = #{parentId,jdbcType=INTEGER},
      URI = #{uri,jdbcType=VARCHAR},
      VERSION = #{version,jdbcType=VARCHAR},
      TYPE = #{type,jdbcType=SMALLINT},
      METHOD = #{method,jdbcType=VARCHAR},
       NEED_AUTH = #{needAuth,jdbcType=TINYINT}, 
       ROUTE_INFO =  #{routeInfo,jdbcType=LONGVARCHAR},
      ICON = #{icon,jdbcType=VARCHAR},
      STATUS = #{status,jdbcType=SMALLINT},
      CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP}
    where ID = #{id,jdbcType=INTEGER}
  </update>

    <select id="selectRoleRules" resultType="com.usthe.bootshiro.shiro.rule.RolePermRule">
    select  CONCAT(re.URI, "==",UCASE(re.method)) as url,GROUP_CONCAT(rol.CODE ORDER BY re.URI) as needRoles
    from auth_resource re
    LEFT JOIN auth_role_resource ro on re.id = ro.RESOURCE_ID
    LEFT JOIN auth_role rol on ro.ROLE_ID = rol.ID
    where (re.type = 2 or re.type = 0)
    GROUP BY
    re.URI,re.ID
  </select>
    <select id="selectRoleRulesByResouceId" parameterType="java.lang.String" resultType="com.usthe.bootshiro.shiro.rule.RolePermRule">
    select  CONCAT(re.URI, "==",UCASE(re.method)) as url,GROUP_CONCAT(rol.CODE ORDER BY re.URI) as needRoles
    from auth_resource re
    LEFT JOIN auth_role_resource ro on re.id = ro.RESOURCE_ID
    LEFT JOIN auth_role rol on ro.ROLE_ID = rol.ID
    where  (re.type = 2 or re.type = 0) and re.ID =  #{id,jdbcType=INTEGER}
    GROUP BY
    re.URI,re.ID
  </select>

    <select id="selectAuthorityMenusByUid" parameterType="java.lang.String" resultMap="BaseResultMap">
    select distinct d.* from auth_user a
    join auth_user_role b on a.uid = b.user_id
    join auth_role_resource c on b.role_id = c.role_id
    join auth_resource d on c.resource_id = d.id
    where a.uid = #{uid,jdbcType=VARCHAR} and d.type = 1 and d.status = 1
  </select>

    <select id="selectMenus" resultMap="BaseResultMap">
        select a.* from auth_resource a
        where a.type = 1
    </select>
    <!--查询api类型，分为两种情况，当isType == true时，只查询api根类别，根类别是所有Api类别的父级节点-->
    <select id="selectApiTeamList" parameterType="com.usthe.bootshiro.domain.bo.AuthResource" resultMap="BaseResultMap">
        select * from auth_resource a
        where a.type = 3
        <if test="parentId == -1">
            and  PARENT_ID = -1
        </if>
        <if test="parentId != -1">
            and  PARENT_ID != -1
        </if>
    </select>
    <!--查询api类型，分为两种情况，当isType == true时，只查询api根类别，根类别是所有Api类别的父级节点-->
    <select id="selectApiListByName" parameterType="com.usthe.bootshiro.domain.bo.AuthResource" resultMap="BaseResultMap">
        select * from auth_resource a
        where a.name = #{name,jdbcType=VARCHAR}
    </select>

    <select id="selectApiList" resultMap="BaseResultMap">
        select a.* from auth_resource a
        where  (a.type = 2 or a.type = 0) and a.status = 1
    </select>

    <select id="selectApiListByTeamId" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select a.* from auth_resource a
        where a.parent_id = #{teamId,jdbcType=INTEGER} and a.type in (0,2,3)
    </select>

    <!--根据资源URI和设备版本信息+接口所属类别组合查询-->
    <select id="selectApiByIdAndVersion" parameterType="com.usthe.bootshiro.domain.bo.AuthResource" resultMap="BaseResultMap">
        select a.ID from auth_resource a
        where a.URI = #{uri,jdbcType=VARCHAR} and a.VERSION = #{version,jdbcType=VARCHAR} and a.PARENT_ID = #{parentId,jdbcType=INTEGER}
    </select>

    <select id="selectApisByRoleId" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select distinct a.* from auth_resource a
        join auth_role_resource b on a.id = b.resource_id
        where b.role_id = #{roleId,jdbcType=INTEGER} and  (a.type = 2 or a.type = 0)
    </select>

    <select id="selectMenusByRoleId" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select distinct a.* from auth_resource a
        join auth_role_resource b on a.id = b.resource_id
        where b.role_id = #{roleId,jdbcType=INTEGER} and a.type = 1
    </select>

    <select id="selectNotAuthorityApisByRoleId" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select a.*
        from auth_resource a
        where (a.type = 2 or a.type = 0) and not exists (
          select 1 from auth_role_resource b
		  where a.id = b.resource_id and b.role_id = #{roleId,jdbcType=INTEGER}
		)
    </select>
    <!-- 获取itmId对应资源类型下，所有没有和角色id关联的api-->
    <select id="selectNotAuthorityApisByTeamIdAndRID" parameterType="java.lang.Integer" resultType="com.usthe.bootshiro.domain.bo.AuthResource">
        select a.*
        from auth_resource a
        where (a.type = 2 or a.type = 0)   and a.PARENT_ID = #{param1} and not exists (
            select 1 from auth_role_resource b
            where a.id = b.resource_id and b.role_id = #{param2}
            )
    </select>

    <select id="selectNotAuthorityMenusByRoleId" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select a.*
        from auth_resource a
        where a.type = 1 and not exists (
          select 1 from auth_role_resource b
		  where a.id = b.resource_id and b.role_id = #{roleId,jdbcType=INTEGER}
		)
    </select>

</mapper>